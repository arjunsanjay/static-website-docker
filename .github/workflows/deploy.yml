name: Build and Deploy to EKS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # 🔐 Log in to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # 🐳 Build the Docker image
    - name: Build Docker image
      run: docker build -t arjunsanjay/static-website:latest .

    # 🚀 Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker push arjunsanjay/static-website:latest

    # 🔐 Configure AWS credentials for EKS access
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    # 📡 Set up kubeconfig to access EKS cluster
    - name: Set up kubeconfig
      run: aws eks update-kubeconfig --region ap-south-1 --name EKS1Cluster

    # 📦 Apply Kubernetes service
    - name: Apply Kubernetes Service
      run: kubectl apply -f k8s/service.yaml

    # 🔁 Force deployment image update to latest
    - name: Update image to trigger rollout
      run: kubectl set image deployment/static-website static-website=arjunsanjay/static-website:latest

    # 🔁 Force rollout by patching deployment annotations
    - name: Force rollout with annotation patch
      run: |
        kubectl patch deployment static-website -p \
        "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"$(date +%s)\"}}}}}"

    # ✅ Wait for deployment to complete
    - name: Wait for rollout to finish
      run: kubectl rollout status deployment/static-website
